apply plugin: 'groovy'
apply plugin: 'maven'

group = 'org.springframework.build.docbook'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenRepo url: 'https://repo.springsource.org/libs-release'
}

dependencies {
    groovy localGroovy()
    compile gradleApi()
    compile 'net.sf.docbook:docbook-xsl:1.75.2:resources@zip'
    compile 'org.apache.xerces:resolver:2.9.1'
    compile 'org.apache.xerces:xercesImpl:2.9.1'
    compile 'saxon:saxon:6.5.3'
    compile 'net.sf.xslthl:xslthl:2.0.1'
    compile 'org.apache.xmlgraphics:fop:0.95-1@jar'
    compile 'org.apache.xmlgraphics:xmlgraphics-commons:1.3'
    compile 'org.apache.xmlgraphics:batik-bridge:1.7@jar'
    compile 'org.apache.xmlgraphics:batik-util:1.7@jar'
    compile 'org.apache.xmlgraphics:batik-css:1.7@jar'
    compile 'org.apache.xmlgraphics:batik-dom:1.7'
    compile 'org.apache.xmlgraphics:batik-svg-dom:1.7@jar'
    compile 'org.apache.avalon.framework:avalon-framework-api:4.3.1'
}

task copyDocbookResources {
    outputs.dir "${project.buildDir}/docbook"

    doLast() {
        def docbookZip = configurations.compile.files.find { file -> file.name.contains('docbook-xsl-')};

        copy { // copy all images and highlighting files from docbook dist
            from zipTree(docbookZip)
            include 'docbook/images/**'
            include 'docbook/highlighting/**'
            into project.buildDir
        }

        copy { // copy admonition images into admon dir for backward compat
            from "${project.buildDir}/docbook/images"
            include '*.*'
            into "${project.buildDir}/docbook/images/admon"
        }

        copy { // copy custom css and xsl from src/main
            from 'src/main/docbook'
            include 'css/**'
            include 'xsl/**'
            into "${project.buildDir}/docbook"
        }
    }
}


task docbookResourcesZip(type: Zip) {
    from copyDocbookResources.outputs.files
    destinationDir = new File(project.sourceSets.main.output.classesDir, "META-INF")
    archiveName = 'docbook-resources.zip'
}

assemble.dependsOn docbookResourcesZip
